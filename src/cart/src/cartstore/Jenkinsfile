pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "cart-service"
        DOCKER_TAG = "latest"
        REGISTRY = "your-docker-registry" // Replace with actual registry if needed
    }

    stages {
        stage('Checkout Code') {
            steps {
                git 'https://your-repository-url.git' // Replace with actual repo URL
            }
        }

        stage('Restore Dependencies') {
            steps {
                sh 'dotnet restore src/cart.csproj'
            }
        }

        stage('Build') {
            steps {
                sh 'dotnet build src/cart.csproj --configuration Release --no-restore'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'dotnet test tests/cart.tests.csproj --configuration Release --no-restore'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t $REGISTRY/$DOCKER_IMAGE:$DOCKER_TAG ."
            }
        }

        stage('Push Docker Image') {
            steps {
                withDockerRegistry([credentialsId: 'docker-hub-credentials', url: '']) {
                    sh "docker push $REGISTRY/$DOCKER_IMAGE:$DOCKER_TAG"
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying the Cart Service...'
                // Add deployment script (Kubernetes, Docker Compose, etc.)
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
    }
}
